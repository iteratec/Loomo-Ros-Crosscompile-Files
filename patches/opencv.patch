--- libs/opencv-2.4.9/CMakeLists.txt	2014-12-15 14:45:53.515341351 -0300
+++ libs/opencv-2.4.9/CMakeLists.txt	2014-12-15 14:08:25.951307116 -0300
@@ -170,12 +170,12 @@
 # ===================================================
 OCV_OPTION(BUILD_SHARED_LIBS        "Build shared libraries (.dll/.so) instead of static ones (.lib/.a)" NOT (ANDROID OR IOS) )
 OCV_OPTION(BUILD_opencv_apps        "Build utility applications (used for example to train classifiers)" (NOT ANDROID) IF (NOT IOS) )
-OCV_OPTION(BUILD_ANDROID_EXAMPLES   "Build examples for Android platform"         ON  IF ANDROID )
-OCV_OPTION(BUILD_DOCS               "Create build rules for OpenCV Documentation" ON )
+OCV_OPTION(BUILD_ANDROID_EXAMPLES   "Build examples for Android platform"         OFF  IF ANDROID )
+OCV_OPTION(BUILD_DOCS               "Create build rules for OpenCV Documentation" OFF )
 OCV_OPTION(BUILD_EXAMPLES           "Build all examples"                          OFF )
-OCV_OPTION(BUILD_PACKAGE            "Enables 'make package_source' command"       ON )
-OCV_OPTION(BUILD_PERF_TESTS         "Build performance tests"                     ON  IF (NOT IOS) )
-OCV_OPTION(BUILD_TESTS              "Build accuracy & regression tests"           ON  IF (NOT IOS) )
+OCV_OPTION(BUILD_PACKAGE            "Enables 'make package_source' command"       OFF )
+OCV_OPTION(BUILD_PERF_TESTS         "Build performance tests"                     OFF  IF (NOT IOS) )
+OCV_OPTION(BUILD_TESTS              "Build accuracy & regression tests"           OFF  IF (NOT IOS) )
 OCV_OPTION(BUILD_WITH_DEBUG_INFO    "Include debug info into debug libs (not MSCV only)" ON )
 OCV_OPTION(BUILD_WITH_STATIC_CRT    "Enables use of staticaly linked CRT for staticaly linked OpenCV" ON IF MSVC )
 OCV_OPTION(BUILD_FAT_JAVA_LIB       "Create fat java wrapper containing the whole OpenCV library" ON IF NOT BUILD_SHARED_LIBS AND CMAKE_COMPILER_IS_GNUCXX )
@@ -271,19 +271,19 @@
     set(OpenCV_INSTALL_BINARIES_PREFIX "")
   endif()
 elseif(ANDROID)
-  set(OpenCV_INSTALL_BINARIES_PREFIX "sdk/native/")
+  set(OpenCV_INSTALL_BINARIES_PREFIX "")
 else()
   set(OpenCV_INSTALL_BINARIES_PREFIX "")
 endif()
 
 if(ANDROID)
-  set(OPENCV_SAMPLES_BIN_INSTALL_PATH "${OpenCV_INSTALL_BINARIES_PREFIX}samples/${ANDROID_NDK_ABI_NAME}")
+  set(OPENCV_SAMPLES_BIN_INSTALL_PATH "${OpenCV_INSTALL_BINARIES_PREFIX}samples")
 else()
   set(OPENCV_SAMPLES_BIN_INSTALL_PATH "${OpenCV_INSTALL_BINARIES_PREFIX}samples")
 endif()
 
 if(ANDROID)
-  set(OPENCV_BIN_INSTALL_PATH "${OpenCV_INSTALL_BINARIES_PREFIX}bin/${ANDROID_NDK_ABI_NAME}")
+  set(OPENCV_BIN_INSTALL_PATH "${OpenCV_INSTALL_BINARIES_PREFIX}bin")
 else()
   set(OPENCV_BIN_INSTALL_PATH "${OpenCV_INSTALL_BINARIES_PREFIX}bin")
 endif()
@@ -293,13 +293,13 @@
 endif()
 
 if(ANDROID)
-  set(LIBRARY_OUTPUT_PATH         "${OpenCV_BINARY_DIR}/lib/${ANDROID_NDK_ABI_NAME}")
-  set(3P_LIBRARY_OUTPUT_PATH      "${OpenCV_BINARY_DIR}/3rdparty/lib/${ANDROID_NDK_ABI_NAME}")
-  set(OPENCV_LIB_INSTALL_PATH     sdk/native/libs/${ANDROID_NDK_ABI_NAME})
-  set(OPENCV_3P_LIB_INSTALL_PATH  sdk/native/3rdparty/libs/${ANDROID_NDK_ABI_NAME})
-  set(OPENCV_CONFIG_INSTALL_PATH  sdk/native/jni)
-  set(OPENCV_INCLUDE_INSTALL_PATH sdk/native/jni/include)
-  set(OPENCV_SAMPLES_SRC_INSTALL_PATH samples/native)
+  set(LIBRARY_OUTPUT_PATH         "${OpenCV_BINARY_DIR}/lib")
+  set(3P_LIBRARY_OUTPUT_PATH      "${OpenCV_BINARY_DIR}/3rdparty/lib")
+  set(OPENCV_LIB_INSTALL_PATH     lib)
+  set(OPENCV_3P_LIB_INSTALL_PATH  share/OpenCV/3rdparty/${OPENCV_LIB_INSTALL_PATH})
+  set(OPENCV_CONFIG_INSTALL_PATH  share/OpenCV)
+  set(OPENCV_INCLUDE_INSTALL_PATH "include")
+  set(OPENCV_SAMPLES_SRC_INSTALL_PATH    share/OpenCV/samples)
 else()
   set(LIBRARY_OUTPUT_PATH         "${OpenCV_BINARY_DIR}/lib")
   set(3P_LIBRARY_OUTPUT_PATH      "${OpenCV_BINARY_DIR}/3rdparty/lib${LIB_SUFFIX}")
@@ -492,7 +492,7 @@
 endif()
 
 if(ANDROID AND ANDROID_EXECUTABLE AND ANT_EXECUTABLE AND (ANT_VERSION VERSION_GREATER 1.7) AND (ANDROID_TOOLS_Pkg_Revision GREATER 13))
-  SET(CAN_BUILD_ANDROID_PROJECTS TRUE)
+  SET(CAN_BUILD_ANDROID_PROJECTS FALSE)
 else()
   SET(CAN_BUILD_ANDROID_PROJECTS FALSE)
 endif()
@@ -560,17 +560,17 @@
   add_subdirectory(samples)
 endif()
 
-if(ANDROID)
-  add_subdirectory(platforms/android/service)
-endif()
-
-if(BUILD_ANDROID_PACKAGE)
-  add_subdirectory(platforms/android/package)
-endif()
-
-if (ANDROID)
-  add_subdirectory(platforms/android/libinfo)
-endif()
+#if(ANDROID)
+#  add_subdirectory(platforms/android/service)
+#endif()
+
+#if(BUILD_ANDROID_PACKAGE)
+#  add_subdirectory(platforms/android/package)
+#endif()
+
+#if (ANDROID)
+#  add_subdirectory(platforms/android/libinfo)
+#endif()
 
 # ----------------------------------------------------------------------------
 # Finalization: generate configuration-based files
--- libs/opencv-2.4.9/cmake/templates/OpenCVConfig.cmake.in	2014-12-15 13:34:42.751276299 -0300
+++ libs/opencv-2.4.9/cmake/templates/OpenCVConfig.cmake.in	2014-12-15 13:35:00.171276564 -0300
@@ -73,7 +73,7 @@
 
 if(NOT WIN32 OR OpenCV_ANDROID_NATIVE_API_LEVEL GREATER 0)
   if(OpenCV_ANDROID_NATIVE_API_LEVEL GREATER 0)
-    set(OpenCV_INSTALL_PATH "${OpenCV_CONFIG_PATH}/../../..")
+    set(OpenCV_INSTALL_PATH "${OpenCV_CONFIG_PATH}/../..")
   else()
     set(OpenCV_INSTALL_PATH "${OpenCV_CONFIG_PATH}/../..")
   endif()
--- libs/opencv-2.4.9/cmake/OpenCVGenAndroidMK.cmake	2015-01-13 13:14:59.851590357 -0300
+++ libs/opencv-2.4.9/cmake/OpenCVGenAndroidMK.cmake	2015-01-13 13:09:19.947583975 -0300
@@ -1,3 +1,17 @@
+macro( ANDROID_GET_ABI_RAWNAME TOOLCHAIN_FLAG VAR )
+ if( "${TOOLCHAIN_FLAG}" STREQUAL "ARMEABI" )
+  set( ${VAR} "armeabi" )
+ elseif( "${TOOLCHAIN_FLAG}" STREQUAL "ARMEABI_V7A" )
+  set( ${VAR} "armeabi-v7a" )
+ elseif( "${TOOLCHAIN_FLAG}" STREQUAL "X86" )
+  set( ${VAR} "x86" )
+ elseif( "${TOOLCHAIN_FLAG}" STREQUAL "MIPS" )
+  set( ${VAR} "mips" )
+ else()
+  set( ${VAR} "unknown" )
+ endif()
+endmacro()
+
 if(ANDROID)
   # --------------------------------------------------------------------------------------------
   #  Installation for Android ndk-build makefile:  OpenCV.mk
