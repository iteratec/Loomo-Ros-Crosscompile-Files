--- libs/pcrecpp/CMakeLists.txt
+++ libs/pcrecpp/CMakeLists.txt
@@ -486,6 +486,12 @@ INSTALL(FILES ${man1} DESTINATION man/man1)
 INSTALL(FILES ${man3} DESTINATION man/man3)
 INSTALL(FILES ${html} DESTINATION share/doc/pcre/html)
 
+STRING(TOLOWER "lib${PROJECT_NAME}cpp" PKG_NAME)
+SET(PKG_LIBRARIES pcrecpp pcre)
+SET(cmake_conf_file "${CMAKE_CURRENT_SOURCE_DIR}/${PKG_NAME}-config.cmake")
+CONFIGURE_FILE("${cmake_conf_file}.in" "${cmake_conf_file}" @ONLY)
+INSTALL(FILES ${cmake_conf_file} DESTINATION share/${PKG_NAME}/cmake/ COMPONENT cmake)
+
 # help, only for nice output
 IF(BUILD_SHARED_LIBS)
   SET(BUILD_STATIC_LIBS OFF)
--- /dev/null
+++ libs/pcrecpp/libpcrecpp-config.cmake
@@ -0,0 +1,26 @@
+if (libpcrecpp_CONFIG_INCLUDED)
+  return()
+endif()
+set(libpcrecpp_CONFIG_INCLUDED TRUE)
+
+set(libpcrecpp_INCLUDE_DIRS /opt/roscpp_output/target/include)
+
+foreach(lib pcrecpp;pcre)
+  set(onelib "${lib}-NOTFOUND")
+  find_library(onelib ${lib}
+    PATHS /opt/roscpp_output/target/lib
+    NO_DEFAULT_PATH
+    )
+  if(NOT onelib)
+    message(FATAL_ERROR "Library '${lib}' in package libpcrecpp is not installed properly")
+  endif()
+  list(APPEND libpcrecpp_LIBRARIES ${onelib})
+endforeach()
+
+foreach(dep )
+  if(NOT ${dep}_FOUND)
+    find_package(${dep})
+  endif()
+  list(APPEND libpcrecpp_INCLUDE_DIRS ${${dep}_INCLUDE_DIRS})
+  list(APPEND libpcrecpp_LIBRARIES ${${dep}_LIBRARIES})
+endforeach()
--- /dev/null
+++ libs/pcrecpp/libpcrecpp-config.cmake.in
@@ -0,0 +1,26 @@
+if (@PKG_NAME@_CONFIG_INCLUDED)
+  return()
+endif()
+set(@PKG_NAME@_CONFIG_INCLUDED TRUE)
+
+set(@PKG_NAME@_INCLUDE_DIRS @CMAKE_INSTALL_PREFIX@/include)
+
+foreach(lib @PKG_LIBRARIES@)
+  set(onelib "${lib}-NOTFOUND")
+  find_library(onelib ${lib}
+    PATHS @CMAKE_INSTALL_PREFIX@/lib
+    NO_DEFAULT_PATH
+    )
+  if(NOT onelib)
+    message(FATAL_ERROR "Library '${lib}' in package @PKG_NAME@ is not installed properly")
+  endif()
+  list(APPEND @PKG_NAME@_LIBRARIES ${onelib})
+endforeach()
+
+foreach(dep @PKG_DEPENDS@)
+  if(NOT ${dep}_FOUND)
+    find_package(${dep})
+  endif()
+  list(APPEND @PKG_NAME@_INCLUDE_DIRS ${${dep}_INCLUDE_DIRS})
+  list(APPEND @PKG_NAME@_LIBRARIES ${${dep}_LIBRARIES})
+endforeach()
